{"version":3,"sources":["const/initialGeometricFigures.js","context/GeometricFigureContext.js","hooks/useGeometricFigures.js","context/ModalContext.js","hooks/useModal.js","components/GeometricFigures/GeometricFigure.jsx","components/GeometricFigures/ModalEditFigure.jsx","components/GeometricFigures/ListGeometricFigures.jsx","components/GeometricFigures/ModalRegisterFigure.jsx","components/Navbar/Navbar.jsx","components/Home/Home.jsx","App.jsx","index.js"],"names":["initialGeometricFigures","id","title","imageUrl","description","tags","GeometricFigureContext","createContext","GeometricFigureProvider","children","useState","geometricFigures","setGeometricFigures","geometricFigureSelected","setGeometricFigureSelected","addGeometricFigure","geometricFigureInfo","uuidv4","selectGeometricFigure","newGeometricFigureInfo","newData","updateGeometricFigure","updateFigure","newDataFigures","map","figure","deleteGeometricFigure","figureSelected","geometricFigureFiltred","filter","useGeometricFigures","Provider","value","ModalContext","ModalProvider","open","typeModal","stateModal","setStateModal","openModal","closeModal","UseModal","GeometricFigure","geometricFigure","useContext","className","style","marginTop","height","onClick","aria-hidden","console","log","src","alt","objectFit","ModalEditFigure","useForm","defaultValues","register","handleSubmit","setValue","reset","useEffect","Modal","isOpen","size","ModalHeader","ModalBody","onSubmit","data","htmlFor","type","placeholder","name","ref","ListGeometricFigures","results","resultsFigures","item","ModalRegisterFigure","Navbar","Home","searchFigure","setSearchFigure","toLowerCase","includes","marginBottom","aria-label","aria-describedby","defaultValue","onChange","event","target","handleChange","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83562d78.chunk.js","sourcesContent":["/** Initial Geometric Figures List */\nconst initialGeometricFigures = [\n    {id: 1, title: 'Triangulo', imageUrl: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ5kxMFNzZI5W9JfetBPISbeXv96y-SmMU5lA&usqp=CAU\", description:\"Triangulo descripcion génerica\", tags: \"tags tags tags\"},\n    {id: 2, title: 'Cuadrado', imageUrl: \"https://creazilla-store.fra1.digitaloceanspaces.com/emojis/45894/black-small-square-emoji-clipart-md.png\", description:\"Cuadrado descripcion génerica\", tags: \"tags tags tags\"},\n    {id: 3, title: 'Cuadrado Espacial', imageUrl: \"https://img.freepik.com/vector-gratis/cubo-3d-oro-cuadrado-geometrico-oro-aislado-realista-sobre-fondo-transparente-brillante-banner-rectangulo-aislado_173043-280.jpg?size=338&ext=jpg\", description:\"Cuadrado descripcion génerica\", tags: \"tags tags tags\"}\n]\n\n/** Export Initial List */\nexport default initialGeometricFigures;","/** Import General Dependecies */\nimport { createContext } from 'react'\n\n/** Import Base of the Geometric Figures List */\nimport initialGeometricFigures from '../const/initialGeometricFigures'\n\n/** Import Custom Hook */\nimport useGeometricFigures from '../hooks/useGeometricFigures';\n\nconst GeometricFigureContext = createContext();\n\n/**\n * Build Provider of the Modal Context\n * @param {*} children Argument that have the components into of the this context\n */\nconst GeometricFigureProvider = ({children}) => {\n\n    const { geometricFigures, addGeometricFigure, updateGeometricFigure, geometricFigureSelected, selectGeometricFigure, deleteGeometricFigure } = useGeometricFigures(initialGeometricFigures);\n    \n    return (\n        <GeometricFigureContext.Provider value={{geometricFigures, addGeometricFigure, updateGeometricFigure, geometricFigureSelected, selectGeometricFigure, deleteGeometricFigure}}>\n            { children }\n        </GeometricFigureContext.Provider>\n    ) \n}\n\n/** Exports */\nexport { GeometricFigureProvider }\nexport default GeometricFigureContext;","\n/** Import General Dependencies */\nimport { useState } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n\n/**\n * Build the Custom Hook that have the Logic of the Geometric Figures and Principal States\n * @param {array} initialGeometricFigures Argument that have the base of the geometric figures list\n */\nexport default function useGeometricFigures (initialGeometricFigures) {\n    const [geometricFigures, setGeometricFigures] = useState(initialGeometricFigures);\n\n    const [geometricFigureSelected, setGeometricFigureSelected] = useState({\n        title: '',\n        imageUrl: '',\n        description: '',\n        tags: ''\n    });\n\n    /**\n     * Function with the action of the add new Geometric Figure to the list.\n     * @param {object} geometricFigureInfo Argument that give the object that the user will insert\n     */\n    const addGeometricFigure = (geometricFigureInfo) => {\n        geometricFigureInfo.id = uuidv4();\n        setGeometricFigures([\n            ...geometricFigures,\n            geometricFigureInfo\n        ])\n    }\n\n    /**\n     * Function with the action of the declare the state of the figure that was selected\n     * @param {object} newGeometricFigureInfo Argument that give the info of the figure that was selected\n     */\n    const selectGeometricFigure = (newGeometricFigureInfo) => {\n        const newData = {\n            id: newGeometricFigureInfo.id,\n            title: newGeometricFigureInfo.title,\n            description: newGeometricFigureInfo.description,\n            imageUrl: newGeometricFigureInfo.imageUrl,\n            tags: newGeometricFigureInfo.tags\n        }\n\n        setGeometricFigureSelected({\n            ...newData\n        })\n    }\n\n    /**\n     * Function with the action of the Delete some figure that the user was indicated\n     * @param {object} figureSelected Argument that give the info of the figure that will be delete\n     */\n    const deleteGeometricFigure = (figureSelected) => {\n        const geometricFigureFiltred = geometricFigures.filter(figure => figure.id !== figureSelected.id);\n        setGeometricFigures(geometricFigureFiltred);\n    }\n\n    /**\n     * Function with the action of the Update the info of the Figure\n     * @param {number} id Argument that give the id of the figure that will be update\n     * @param {object} updateFigure Argument that five the new info of the figure that will be update\n     */\n    const updateGeometricFigure = (id, updateFigure) => {\n        const newDataFigures = geometricFigures.map(figure => ((figure.id === id) ? updateFigure : figure));\n        setGeometricFigures(newDataFigures);\n    }\n\n    return {\n        geometricFigures,\n        addGeometricFigure,\n        selectGeometricFigure,\n        updateGeometricFigure,\n        geometricFigureSelected,\n        deleteGeometricFigure\n    }\n\n}\n","/**Import General Dependencies */\nimport { createContext } from \"react\";\n\n/** Import of the Custom Hook */\nimport UseModal from '../hooks/useModal'\n\n// Create Context Modal\nconst ModalContext = createContext();\n\n/**\n * Build Provider of the Modal Context\n * @param {*} children Argument that have the components into of the this context \n */\nconst ModalProvider = ({children}) => {\n\n    const {stateModal, openModal, closeModal } = UseModal();\n\n    return (\n        <ModalContext.Provider value={{stateModal, openModal, closeModal}}>\n            { children }\n        </ModalContext.Provider>\n    );\n}\n\n/** Exports */\nexport { ModalProvider }\nexport default ModalContext;","/** Import General Dependencies */\nimport { useState } from \"react\";\n\n/**\n * Build Custom Hoook UseModal -> this have principal state and functions of the modals.\n */\nexport default function UseModal () {\n    \n    const [stateModal, setStateModal] = useState({open: false, typeModal: false});\n\n    /**\n     * Function that have the action of Open Modals.\n     * @param {string} typeModal argument that have the type of the Modal that will Open \n     */\n    const openModal = (typeModal) => {\n        setStateModal({open: true, typeModal:typeModal})\n    }\n\n    /**\n     * Function that have the action of close Modals.\n     */\n    const closeModal = () => {\n        setStateModal({open: false, typeModal:false})\n    }\n\n    return {\n        stateModal,\n        openModal,\n        closeModal\n    }\n}","\nimport { useContext } from 'react'\nimport GeometricFigureContext from '../../context/GeometricFigureContext';\nimport ModalContext from '../../context/ModalContext';\n\nexport default function GeometricFigure({ geometricFigure }) {\n\n    const { openModal } = useContext(ModalContext);\n    const { selectGeometricFigure, deleteGeometricFigure } = useContext(GeometricFigureContext);\n\n    const imgStyles = {\n        height: '200px',\n        objectFit: 'cover'\n    }\n\n    const updateAction = (figureSelected) => {\n        selectGeometricFigure(figureSelected);\n        openModal('edit')\n    }\n\n    const deleteAction = (figure) => {\n        console.log(figure);\n        deleteGeometricFigure(figure);\n    }\n\n    return (\n        <div>\n            <div className=\"card\" style={{ marginTop: '20px', height:'420px'}}>\n                <div className=\"card-header bg-dark border-bottom-0\">\n                    <div className=\"row\">\n                        <div className=\"col-md-2\">\n                            <button className=\"btn btn-warning\" onClick={()=> updateAction(geometricFigure)}>\n                                <span aria-hidden=\"true\"><i className=\"fas fa-edit\"></i></span>\n                            </button>\n                        </div>\n                        <div className=\"col-md-7\"></div>\n                        <div className=\"col-md-3\">\n                            <button className=\"btn btn-danger\" onClick={() => deleteAction(geometricFigure)}>\n                                <span aria-hidden=\"true\"><i className=\"fas fa-trash-alt\"></i></span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                <img\n                    src={geometricFigure.imageUrl}\n                    alt={geometricFigure.title}\n                    className=\"card-img-top\"\n                    style={imgStyles}\n                />\n                <div className=\"card-body\">\n                    <h4>{geometricFigure.title}</h4>\n                    <p>{geometricFigure.description}</p>\n                </div>\n            </div>\n        </div>\n    )\n}","/** Import Global Dependencies */\nimport { useContext, useEffect } from 'react';\nimport { Modal, ModalBody, ModalHeader } from 'reactstrap'\nimport { useForm } from 'react-hook-form'\n\n/** Import Global Context */\nimport ModalContext from '../../context/ModalContext';\nimport GeometricFigureContext from '../../context/GeometricFigureContext';\n\n/**\n * Buid the component Modal Edit Figure\n */\nexport default function ModalEditFigure() {\n    const { stateModal, closeModal } = useContext(ModalContext);\n    const { updateGeometricFigure, geometricFigureSelected } = useContext(GeometricFigureContext);\n    const { register, handleSubmit, setValue, reset } = useForm({\n        defaultValues: geometricFigureSelected\n    });\n\n    setValue('title', geometricFigureSelected.title);\n    setValue('imageUrl', geometricFigureSelected.imageUrl);\n    setValue('description', geometricFigureSelected.description);\n    setValue('tags', geometricFigureSelected.tags);\n\n    useEffect(() => {\n        reset(geometricFigureSelected);\n    }, [geometricFigureSelected, reset]);\n\n    const onSubmit = data => {\n        data.id = geometricFigureSelected.id;\n        console.log(geometricFigureSelected);\n        updateGeometricFigure(data.id, data)\n        closeModal();\n    }\n\n    return (\n        <Modal isOpen={stateModal.typeModal === 'edit' ? stateModal.open : false} size=\"lg\">\n            <ModalHeader>\n                Editar Figura.\n            </ModalHeader>\n            <ModalBody >\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <form onSubmit={handleSubmit(onSubmit)}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"title\">Título Figura</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Escriba el nombre de la figura.\" name=\"title\" ref={register} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"imageUrl\">Imagen URL Figura:</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Escriba el url de la imagen de la figura.\" name=\"imageUrl\" ref={register} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description\">Descripción</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Escriba una breve descripción de la figura.\" name=\"description\" ref={register} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"tags\">Tags Figura</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Escriba los tags de la figura.\" name=\"tags\" ref={register} />\n                                </div>\n                                <hr />\n                                <button type=\"submit\" className=\"btn btn-success\">Guardar Figura</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </ModalBody>\n        </Modal>\n    );\n}","\nimport GeometricFigure from './GeometricFigure'\nimport ModalEditFigure from './ModalEditFigure'\n\nexport default function ListGeometricFigures({results}) {\n    console.log(results)\n    const resultsFigures = results ? results : [];\n    return (\n        <div>\n            <div className=\"card\">\n                <div className=\"card-body\">\n                    <div className=\"row\">\n                        {resultsFigures.map(item => (\n                            <div className=\"col-md-4\" key={item.id}>\n                                <GeometricFigure geometricFigure={item} />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            </div>\n            <ModalEditFigure />\n        </div>\n    );\n}","\n/** Import Global Dependencies */\nimport { useContext } from 'react';\nimport { Modal, ModalBody, ModalHeader } from 'reactstrap'\nimport { useForm } from 'react-hook-form'\n\n/** Import Global Context */\nimport ModalContext from '../../context/ModalContext';\nimport GeometricFigureContext from '../../context/GeometricFigureContext';\n\n/**\n * Build Component Modal Register Geometric Figure\n */\nexport default function ModalRegisterFigure() {\n    const { stateModal, closeModal } = useContext(ModalContext);\n    const { addGeometricFigure } = useContext(GeometricFigureContext);\n    const { register, handleSubmit } = useForm();\n\n    /**\n     * Function that have the action of the register Figure\n     * @param {object} data Argument that give the info of the new Figure \n     */\n    const onSubmit = data => {\n        addGeometricFigure(data)\n        closeModal();\n    }\n\n    return (\n        <Modal isOpen={stateModal.typeModal === 'register' ? stateModal.open : false} size=\"lg\">\n            <ModalHeader>\n                Registrar Figura.\n            </ModalHeader>\n            <ModalBody >\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-12\">\n                            <form onSubmit={handleSubmit(onSubmit)}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"title\">Título Figura</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Escriba el nombre de la figura.\" name=\"title\" ref={register} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"imageUrl\">Imagen URL Figura:</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Escriba el url de la imagen de la figura.\" name=\"imageUrl\" ref={register} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description\">Descripción</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Escriba una breve descripción de la figura.\" name=\"description\" ref={register} />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"tags\">Tags Figura</label>\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Escriba los tags de la figura.\" name=\"tags\" ref={register} />\n                                </div>\n                                <hr />\n                                <button type=\"submit\" className=\"btn btn-success\">Guardar Figura</button>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </ModalBody>\n        </Modal>\n    );\n}","/**\n * Build Component Navbar\n */\nexport default function Navbar () {\n    return (\n        <nav className=\"navbar navbar-dark bg-dark\">\n            {/* eslint-disable-next-line */}\n            <a className=\"navbar-brand\">Welcome to Testing Task!</a>\n        </nav>\n    );\n}","\n/** Import Global Dependencies */\nimport { useContext, useState } from 'react'\n\n/** Import Components */\nimport ListGeometricFigures from '../GeometricFigures/ListGeometricFigures'\nimport ModalRegisterFigure from '../GeometricFigures/ModalRegisterFigure';\nimport Navbar from '../Navbar/Navbar'\n\n/** Import Css of this component */\nimport '../../assets/css/Home.css'\n\n/** Import Global Context */\nimport GeometricFigureContext from '../../context/GeometricFigureContext';\nimport ModalContext from '../../context/ModalContext';\n\n/**\n * Build Component Home\n */\nexport default function Home() {\n\n    const { openModal } = useContext(ModalContext);\n    const [searchFigure, setSearchFigure] = useState(\"\");\n    const { geometricFigures } = useContext(GeometricFigureContext);\n\n    /**\n     * Function that have the action of set the name that the user will search in the list\n     * @param {*} event Argument that have the event of the input \n     */\n    const handleChange = event => {\n        setSearchFigure(event.target.value);\n    }\n\n    // Make List Geometric Figures\n    const results = !searchFigure\n        ? geometricFigures\n        : geometricFigures.filter(item => (\n            item.title.toLowerCase().includes(searchFigure.toLowerCase())\n        )\n        );\n\n\n    return (\n        <div>\n            <Navbar />\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <div className=\"card\" style={{ marginTop: '50px' }}>\n                            <div className=\"card-body\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-12\">\n                                        <div className=\"row\">\n                                            <div className=\"col-md-3\"></div>\n                                            <div className=\"col-md-7\">\n                                                <h1 className=\"title-custom\">Geometric Figures List</h1>\n\n                                            </div>\n                                            <div className=\"col-md-2\"></div>\n                                        </div>\n                                        <div className=\"row\" style={{ marginTop: '30px', marginBottom: '30px' }}>\n                                            <div className=\"col-md-3\"></div>\n                                            <div className=\"col-md-3\">\n                                                <button className=\"btn btn-lg btn-success\" onClick={() => openModal('register')}>Agregar Figura  <i className=\"fas fa-plus-circle\"></i></button>\n                                            </div>\n                                            <div className=\"col-md-3\">\n                                                <div className=\"input-group input-group-lg\">\n                                                    <div className=\"input-group-prepend\">\n                                                    <span className=\"input-group-text\" id=\"inputGroup-sizing-lg\"><i className=\"fas fa-search\"></i></span>\n                                                    </div>\n                                                    <input\n                                                    className=\"form-control\"\n                                                    type=\"text\"\n                                                    placeholder=\"Search\"\n                                                    aria-label=\"Large\"\n                                                     aria-describedby=\"inputGroup-sizing-sm\"\n                                                    defaultValue={searchFigure}\n                                                    onChange={(event) => { handleChange(event) }}\n                                                />\n                                                </div>\n\n                                                \n                                            </div>\n                                            <div className=\"col-md-3\"></div>\n                                        </div>\n                                        <div className=\"row\" style={{ marginTop: '50px', marginBottom: '30px' }}>\n                                            <div className=\"col-md-1\"></div>\n                                            <div className=\"col-md-10\" >\n                                                <ListGeometricFigures results={results} />\n                                            </div>\n                                            <div className=\"col-md-1\"></div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <ModalRegisterFigure />\n        </div>\n    )\n}","/** Import Components */\nimport Home from './components/Home/Home.jsx'\n\n/** Import General Context */\nimport { GeometricFigureProvider } from './context/GeometricFigureContext'\nimport { ModalProvider } from './context/ModalContext'\n\n/**\n * Build of the Principal Component in the APP\n */\nfunction App() {\n  return (\n    <div>\n      <GeometricFigureProvider>\n        <ModalProvider>\n          <Home />\n        </ModalProvider>\n      </GeometricFigureProvider>\n    </div>\n  );\n}\n\n/** Export of the Component App */\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}